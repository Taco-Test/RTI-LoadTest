version: "3.7"
services:
  postgres:
    image: debezium/postgres:13
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
      
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      
  kafka:
    image: confluentinc/cp-kafka:5.5.3
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_JMX_PORT: 9991

  debezium:
    image: debezium/connect:1.4
    depends_on:
      - kafka
      - postgres
    ports:
      - 8083:8083
    environment:
      CONFIG_STORAGE_TOPIC: my_debezium_configs
      OFFSET_STORAGE_TOPIC: my_debezium_offsets
      STATUS_STORAGE_TOPIC: my_debezium__statuses
      GROUP_ID: 1
      BOOTSTRAP_SERVERS: kafka:9092
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.3
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081,http://localhost:8081
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092

  spark-master:
    image: bitnami/spark:3.2.4
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - "SPARK_MODE=master"
      - "SPARK_CLASSPATH=/app/jars/*"
    volumes:
      - ./spark-data:/data   # Map the local directory to /data inside the container
      - ./scripts:/app/scripts
      - ./jars:/app/jars
      
  spark-worker:
    image: bitnami/spark:3.2.4
    depends_on:
      - spark-master
    environment:
      - "SPARK_MODE=worker"
      - "SPARK_MASTER_URL=spark://spark-master:7077"
      - "SPARK_WORKER_MEMORY=1G"
      - "SPARK_WORKER_CORES=1"
      - "SPARK_RDD_COMPRESS=true"
      - "SPARK_CLASSPATH=/app/jars/*"
    ports:
      - "8088:8088"
    volumes:
      - ./spark-data:/data   # Map the local directory to /data inside the container
      - ./scripts:/app/scripts
      - ./jars:/app/jars
